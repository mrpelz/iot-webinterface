error_log stderr info;

daemon off;
worker_processes auto;

events {}

http {
  access_log /dev/null;

  client_body_temp_path /dev/null;
  proxy_temp_path /dev/null;
  fastcgi_temp_path /dev/null;
  uwsgi_temp_path /dev/null;
  scgi_temp_path /dev/null;

  include mime.conf;

  default_type text/plain;
  charset utf-8;

  gzip            on;
  gzip_min_length 1000;
  gzip_proxied    expired no-cache no-store private auth;
  gzip_types      *;

  server {
    listen 1338 default_server;
    listen [::]:1338 default_server;

    include headers.conf;
    add_header Cache-Control 'no-cache';

    expires off;
    root dist;

    # serve `/` with file `/index.html`
    location = / {
      index index.html;
    }

    # serve `/manifest.json` from `static`
    location /manifest.json {
      root static;
    }

    # for simple routes not pointing to files, fall back to serving `/index.html`
    location / {
      try_files $uri $uri/ /index.html;
    }

    # serve `/images/` from `static`
    location /images/ {
      root static;
    }

    # serve `/src/` (devtools fetching source files from source-maps)
    # from root-directory
    location /src/ {
      root .;
    }

    # proxy api stream-endpoint with websocket-specific proxy settings
    # disallow storage completely
    location = /api/stream {
      include headers.conf;
      add_header Cache-Control 'no-store';

      proxy_pass http://iot.lan.wurstsalat.cloud:1337/api/stream;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
    }

    # proxy api
    location /api/ {
      proxy_pass http://iot.lan.wurstsalat.cloud:1337/api/;
    }

    # proxy nvr
    location /nvr/ {
      proxy_pass http://nvr.lan.wurstsalat.cloud/;
    }
  }
}
